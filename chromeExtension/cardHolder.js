

/**
 * @class CardHolder
 */
class CardHolder {
    /**
     * @param {Element} cardHolder where the elements are going to be
     *   inserted into
     * @param {Element} cardTemplate the template for cards
     * @param {String} serverUri 
     */
    constructor(cardHolder, cardTemplate, serverUri) {
        this.cardHolder_ = cardHolder;
        this.cardTemplate_ = cardTemplate;
        this.hostUri_ = serverUri;
    }

    /**
     * @param {Blob} data
     * @private
     */
    readFile(data) {

    }


    /**
     * @param {File} file
     * @private
     */
    async scanFile_(file) {
        console.log(this.hostUri_);
        const data = new Uint8Array(await file.slice().arrayBuffer());

        const response = await fetch(this.hostUri_ + '/scan', {
            method: 'POST',
            body: JSON.stringify({ name: file.name, data: data }),//JSON.stringify(file),
            headers: {
                'Content-Type': 'application/json'
            }
        });
        const resObj = await response.json();
        console.log(resObj);
    }

    /**
     * @param {File} file 
     */
    addCard(file) {
        const clone = this.cardTemplate_.content.cloneNode(true);
        let cardInfo = clone.querySelector('div');
        cardInfo.textContent = file.name;
        this.scanFile_(file);
        this.cardHolder_.appendChild(cardInfo);
    }

}

export {CardHolder};