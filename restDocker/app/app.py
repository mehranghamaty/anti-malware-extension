from flask import Flask, request, jsonify
from flask_cors import CORS, cross_origin
from scanners.scanWrapper import ScanWrapper
from utility.cache import Cache
from utility.ScanMetaData import ScanMetaData


def generateApp() -> Flask:
    scanner = ScanWrapper()
    app = Flask(__name__)
    CORS(app, resources={r"/*": {"origins": "chrome-extension://gpeglbjhnbgabickdiaclfpekiabfoac"}})

    cache = Cache()

    # Routes
    @app.route('/')
    @cross_origin()
    def test():
        #print(request.json)
        resp = jsonify("Works!")
        resp.status_code = 200
        resp.headers.add('Access-Control-Allow-Origin', '*')
        return resp
    
    @app.route('/scan', methods = ['GET'])
    @cross_origin()
    def scandemo():
        
        resp = jsonify("can I return a dropbox here?")
        resp.status_code = 200
        return resp

    @app.route('/scan', methods = ['POST'])
    @cross_origin()
    def scan():
        #print(request.json)
        name = request.json['name']
        #if not scannable(name):
        #    resp = jsonify({'message' : 'not supported file type'})
        #    resp.status_code = 400
        #    return resp
        resp = {'status' : 'parsing'}

        startInd = request.json['start']
        if cache.exists(name) and startInd == 0:
            del cache[name]
        data = bytearray(int(x) for x in request.json['data'].split(','))
        cache.extend(name, data)

        if request.json['lastMessage']:
            resp['scanner_results'] = scanner.scan(cache[name], ScanMetaData(name))
            resp['status'] = 'complete'

        resp = jsonify(resp)
        resp.status_code = 200
        return resp

    return app