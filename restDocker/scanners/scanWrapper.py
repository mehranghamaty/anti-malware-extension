from scanners.modelWrapper import ModelWrapper
from scanners.scanner import Scanner
from flask import Blueprint

"""
    Haven't decided if this should have a tracker for things
    such has total amount of requests. Maybe as things expand.
"""
class ScanWrapper(Scanner):
    def __init__(self, inhouseModel : ModelWrapper) -> None:
        self._inhouseModel = inhouseModel
        self._bluePrint = Blueprint(
            self.__class__.__name__,
            self.__class__.__name__,
            template_folder="templates")
        self._bluePrint.register_blueprint(self._inhouseModel.getBluePrint())

    """
        Takes the data object and produces 
        a json to return
    """
    def scan(self, data) -> dict:
        scannerResults = {}
        pred = self._inhouseModel.predict(data)
        if pred != 0:
            scannerResults['status'] = 'possibly malicious'
            scannerResults['service'] = 'inhouse method'

        return scannerResults
    
    def getBluePrint(self):
        return self._bluePrint