from flask import render_template, Blueprint
from utility.cache import ResultTracker
from scanners.scanner import Scanner
import clamd
from io import BytesIO

class ClamAvWrapper(Scanner):
    def __init__(self) -> None:
        self._clam = clamd.ClamdUnixSocket()
        self._avaliable = self._clam.ping() == 'PONG'
        self._resultsTracker = ResultTracker(f"{self.__class__.__name__}.txt")
        self._bluePrint = Blueprint(
            self.__class__.__name__,
            self.__class__.__name__,
            template_folder="templates")
        self._bluePrint.add_url_rule('/dashboard', 'dashboard', self.dashboard, methods = ['GET'])

    def avaliable(self) -> bool:
        return self._avaliable

    def scan(self, data) -> int:
        pred = self._clam.instream(BytesIO(data))
        #{'stream': ('OK', None)} plain text files
        #{'stream': ('FOUND', 'Win.Test.EICAR_HDB-1')} clamd.EICAR
        return pred
    
    def getBluePrint(self):
        return self._bluePrint
    
    def dashboard(self):
        return render_template('dashboard.html', 
                               name=self.__class__.__name__, 
                               responses=self._resultsTracker.getResults())