import pefile
import joblib
from utility.helpers import toDF
from flask import render_template, Blueprint
from utility.cache import ResultTracker
from scanners.scanner import Scanner

class ModelWrapper(Scanner):
    def __init__(self, path) -> None:
        self._model = joblib.load(path)
        self._resultsTracker = ResultTracker(f"{self.__class__.__name__}.txt")
        self._bluePrint = Blueprint(
            self.__class__.__name__,
            self.__class__.__name__,
            template_folder="templates")
        self._bluePrint.add_url_rule('/dashboard', 'dashboard', self.dashboard, methods = ['GET'])

    def scan(self, data) -> int:
        pe = pefile.PE(data=data)
        input = toDF(pe.header)
        pred = int(self._model.predict(input)[0])
        self._resultsTracker.incr(pred);
        return pred
    
    def getBluePrint(self):
        return self._bluePrint
    
    def dashboard(self):
        return render_template('dashboard.html', 
                               name=self.__class__.__name__, 
                               responses=self._resultsTracker.getResults())