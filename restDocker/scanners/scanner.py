from abc import ABC, abstractmethod
from utility.ScanMetaData import ScanMetaData

"""
    All of the classes which inherit from this should be considered singletons,
        namely they last the entire duration of the application.
"""
class Scanner(ABC):

    @abstractmethod
    def scan(self, data, metadata: ScanMetaData) -> dict:
        return NotImplementedError
    
    @abstractmethod
    def avaliable(self) -> bool:
        return NotImplementedError
    
    @abstractmethod
    def avaliable(self) -> bool:
        return NotImplementedError

    @abstractmethod
    def getBluePrint(self):
        return NotImplementedError