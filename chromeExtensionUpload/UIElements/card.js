
import { inspectFile } from "../FileInspector/fileInspect";
import { FileStatus } from "../FileInspector/fileStatus";
import { getFileNameFromUri } from "../UtilityFiles/fileName";

/**
 * @class Card
 */
class Card {
    /**
     * @param {Element} cardTemplate the template for cards
     */
    constructor(cardTemplate) {
        /** @type {Element} */
        this.cardTemplate_ = cardTemplate;

        /** @type {FileStatus | undefined} */
        this.status_ = undefined;

        /** @type {HTMLElement} */
        this.clone_ = this.cardTemplate_.content.cloneNode(true);

        /** @type {HTMLElement} */
        this.cardElement_ = this.clone_.querySelector('.card');

        /** @type {HTMLElement} */
        this.spinnerElement_ = this.cardElement_.querySelector('.lds-grid');
        
        /** @type {HTMLElement} */
        this.fileElement_ = this.cardElement_.querySelector('.file');

        /** @type {HTMLElement} */
        this.fileNameElement_ = this.fileElement_.querySelector('.fileName');
        
        /** @type {HTMLElement} */
        this.statusElement_ = this.fileElement_.querySelector('.fileStatus');
    }

    /**
     * @param {File} file
     */
    setFromFile(file) {
        this.file_ = file;
        this.fileNameElement_.textContent = getFileNameFromUri(file.name);
    }

    async scanFile() {
        this.status_ = await inspectFile(this.file_);
        this.fileElement_.style.display = 'grid';
        this.cardElement_.classList.add(this.status_.toString());
        this.statusElement_.textContent = this.status_.toString();
        this.spinnerElement_.remove();
    }

    /**
     * Renders the card object.
     * @return {HTMLElement}
     */
    render() {
        return this.cardElement_;
    }
}

export { Card };