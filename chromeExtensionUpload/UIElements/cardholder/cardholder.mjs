import CardItem from "../carditem/carditem.mjs";

/**
 * @class CardHolder
 */
export default class CardHolder extends HTMLElement {
    constructor() {
        super();

        this.addEventListener("scroll", this.checkFlows.bind(this), {passive: false});
    }

    checkFlows() {
        const isScrollable = this.scrollHeight > this.clientHeight;

        // GUARD: If element is not scrollable, remove all classes
        if (!isScrollable) {
            this.classList.remove('lower-fade', 'upper-fade');
            return;
        }
        
        // Otherwise, the element is overflowing!
        // Now we just need to find out which direction it is overflowing to (can be both)
        const isScrolledToBottom = this.scrollHeight <= this.clientHeight + this.scrollTop;
        const isScroledlToTop = this.scrollTop === 0;
        console.log(isScroledlToTop, this.scrollTop);
        this.classList.toggle('lower-fade', !isScrolledToBottom);
        this.classList.toggle('upper-fade', !isScroledlToTop);
    }
    
    /**
     * @param {File} file 
     */
    async addCardFromFile(file) {
        let cardItem = new CardItem();
        cardItem.setFile(file);
        this.appendChild(cardItem);
        this.checkFlows();
    }
}

customElements.define("card-holder", CardHolder);